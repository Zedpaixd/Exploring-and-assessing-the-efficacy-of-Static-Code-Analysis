<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>